// [AIV_SHORT]  Build version: 0.4.1 - Friday, November 1st, 2019, 1:22:26 PM  
 (window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"2mmj":function(e,r,o){e.exports=o.p+"374a4767bd27018051743808685703e0.png"},"7mSr":function(e,r,o){e.exports=o.p+"f22d55e4b17a66c5f9f5a54fe433d820.png"},HpAP:function(e,r,o){"use strict";o.r(r);var n=o("dLPz"),p=o.n(n),s={data:function(){return{contents:p.a}}},t=o("KHd+"),i=Object(t.a)(s,function(){var e=this,r=e.$createElement;return(e._self._c||r)("div",{staticClass:"content",domProps:{innerHTML:e._s(e.contents)}})},[],!1,null,null,null);r.default=i.exports},OjRc:function(e,r,o){e.exports=o.p+"89476c2c88b04ecc6b4e16a6b3c5cc18.png"},RAzI:function(e,r,o){e.exports=o.p+"d57173091775549f817462c19c9e3eb0.png"},Xyfl:function(e,r,o){e.exports=o.p+"b8a5f049b96f5c65c032828d847fa13e.png"},dLPz:function(e,r,o){e.exports='<h1 id="pixels-syntax">Pixels Syntax</h1>\n<h2 id="expressions">Expressions</h2>\n<p>The simplest <strong>expression</strong> is just a colour code; for example, this program draws a single red pixel in the top left corner:</p>\n<pre><code>r</code></pre><p><img src="'+o("RAzI")+'" alt="r"></p>\n<p>Multiple expressions can be given on a single line. Just put a space between them! This program draws three red pixels:</p>\n<pre><code>r r r</code></pre><p><img src="'+o("Xyfl")+'" alt="r r r"></p>\n<p>We can shorten this program, though, by specifying a number in front of the colour code. This program is equivalent to the one above:</p>\n<pre><code>1r 1r 1r</code></pre><p>The shortened version looks like this:</p>\n<pre><code>3r</code></pre><p>The semicolon (<code>;</code>) can be used to end a line. Any expressions after a semicolon will be drawn on a new line. For example, this program draws a 3x3 red square in the top left corner:</p>\n<pre><code>3r; 3r; 3r;</code></pre><p><img src="'+o("2mmj")+'" alt="3r; 3r; 3r;"></p>\n<p>To make your code easier to read, though, you&#39;ll probably want to format it like this:</p>\n<pre><code>3r;\n3r;\n3r;</code></pre><h2 id="loops">Loops</h2>\n<p>Using numbered expressions is already a kind of loop, but there is syntax for more advanced loops. Take this program, for example:</p>\n<pre><code>2r 2y 2r 2y 2r 2y;</code></pre><p>Here, the program <code>2r 2y</code> is repeated three times. This program does exactly that:</p>\n<pre><code>3[2r 2y];</code></pre><p>The resulting picture looks like this:</p>\n<p><img src="'+o("7mSr")+'" alt="3[3r 3y]"></p>\n<p>Looping can be done over multi-line programs as well. For example, this program is really expressing a multi-line loop:</p>\n<pre><code>r y;\nr y;\nr y;</code></pre><p><img src="'+o("OjRc")+'" alt="3[r y;]"></p>\n<p>Using the looping syntax, it can be rewritten like this:</p>\n<pre><code>3[r y;]</code></pre>'}}]); 